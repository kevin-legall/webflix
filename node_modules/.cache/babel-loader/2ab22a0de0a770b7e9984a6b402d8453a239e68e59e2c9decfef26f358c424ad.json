{"ast":null,"code":"var _jsxFileName = \"/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchMovies = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n        setData(response.data.results);\n      } catch (err) {\n        console.error('Erreur lors de la récupération des films :', err);\n      }\n    };\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n        setGenres(response.data.genres);\n      } catch (err) {\n        console.error('Erreur lors de la récupération des catégories :', err);\n      }\n    };\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n      }\n    };\n    fetchMovies();\n    fetchGenres();\n    const filmsWithGenres = () => data.filter(movie => {\n      if (movie.genres_ids.includes(genre.id)) {\n        movie.genres_names.push(genre.name);\n        console.log(movie.genres_names);\n      } else {\n        console.log('rien de bon');\n      }\n    });\n    genres.forEach(genre => {\n      filmsWithGenres();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(movie => /*#__PURE__*/_jsxDEV(MovieComponent, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(FetchMovies, \"jFhiA3kPdX1VxJRmbe64HiPTc5M=\");\n_c = FetchMovies;\nexport default FetchMovies;\nvar _c;\n$RefreshReg$(_c, \"FetchMovies\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieComponent","jsxDEV","_jsxDEV","FetchMovies","_s","data","setData","genres","setGenres","fetchMovies","response","get","options","results","err","console","error","fetchGenres","method","headers","accept","Authorization","filmsWithGenres","filter","movie","genres_ids","includes","genre","id","genres_names","push","name","log","forEach","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { Movie } from \"../models/Movie\";\nimport { Genre } from \"../models/Genre\";\n\nconst FetchMovies = () => {\n\n    const [data, setData] = useState([]);\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const response = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n                setData(response.data.results);\n            } catch (err) {\n                console.error('Erreur lors de la récupération des films :', err);\n            }\n        };\n\n        const fetchGenres = async () => {\n            try {\n                const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n                setGenres(response.data.genres);\n            } catch (err) {\n                console.error('Erreur lors de la récupération des catégories :', err);\n            }\n        };\n\n        const options = {\n            method: 'GET',\n            headers: {\n                accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n            }\n        };\n\n        fetchMovies();\n        fetchGenres();\n\n        const filmsWithGenres = () => data.filter((movie:Movie) => {\n            if (movie.genres_ids.includes(genre.id)) {\n                movie.genres_names.push(genre.name);\n                console.log(movie.genres_names)\n            } else {\n                console.log('rien de bon');\n            }\n        });\n\n        genres.forEach((genre:Genre)=> {\n            filmsWithGenres();\n        })\n\n    }, []);\n\n    return (\n        <div>\n            <ul>\n                {\n                    data.map((movie: Movie) => (\n                        <MovieComponent key={movie.id} movie={movie} />\n                    ))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default FetchMovies;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,4CAA4C,EAAEC,OAAO,CAAC;QACvFN,OAAO,CAACI,QAAQ,CAACL,IAAI,CAACQ,OAAO,CAAC;MAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,4CAA4C,EAAEF,GAAG,CAAC;MACpE;IACJ,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMP,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,+CAA+C,EAAEC,OAAO,CAAC;QAC1FJ,SAAS,CAACE,QAAQ,CAACL,IAAI,CAACE,MAAM,CAAC;MACnC,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,iDAAiD,EAAEF,GAAG,CAAC;MACzE;IACJ,CAAC;IAED,MAAMF,OAAO,GAAG;MACZM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACnB;IACJ,CAAC;IAEDZ,WAAW,CAAC,CAAC;IACbQ,WAAW,CAAC,CAAC;IAEb,MAAMK,eAAe,GAAGA,CAAA,KAAMjB,IAAI,CAACkB,MAAM,CAAEC,KAAW,IAAK;MACvD,IAAIA,KAAK,CAACC,UAAU,CAACC,QAAQ,CAACC,KAAK,CAACC,EAAE,CAAC,EAAE;QACrCJ,KAAK,CAACK,YAAY,CAACC,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC;QACnChB,OAAO,CAACiB,GAAG,CAACR,KAAK,CAACK,YAAY,CAAC;MACnC,CAAC,MAAM;QACHd,OAAO,CAACiB,GAAG,CAAC,aAAa,CAAC;MAC9B;IACJ,CAAC,CAAC;IAEFzB,MAAM,CAAC0B,OAAO,CAAEN,KAAW,IAAI;MAC3BL,eAAe,CAAC,CAAC;IACrB,CAAC,CAAC;EAEN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA;IAAAgC,QAAA,eACIhC,OAAA;MAAAgC,QAAA,EAEQ7B,IAAI,CAAC8B,GAAG,CAAEX,KAAY,iBAClBtB,OAAA,CAACF,cAAc;QAAgBwB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACI,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnC,EAAA,CA7DID,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA+DjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}