{"ast":null,"code":"var _jsxFileName = \"/Users/legallkevin/React/webflix_project/webflix/src/components/MovieComponent.tsx\";\nimport React from 'react';\nimport GenreComponent from \"./GenreComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieComponent = ({\n  movie,\n  categoriesById\n}) => {\n  var _movie$genre_ids$map, _movie$genre_ids;\n  const movieGenres = (_movie$genre_ids$map = (_movie$genre_ids = movie.genre_ids) === null || _movie$genre_ids === void 0 ? void 0 : _movie$genre_ids.map(genreId => categoriesById[genreId])) !== null && _movie$genre_ids$map !== void 0 ? _movie$genre_ids$map : [];\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://image.tmdb.org/t/p/w300/\" + movie.poster_path,\n      alt: \"image du film \" + movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [movie.vote_average, \"/10 (\", movie.vote_count, \" votes)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"Cat\\xE9gories :\", movieGenres.length > 0 ? movieGenres.map(genre => /*#__PURE__*/_jsxDEV(GenreComponent, {\n        genre: genre\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }, this)) : \"Ce film ne possède pas de catégorie.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = MovieComponent;\nexport default MovieComponent;\nvar _c;\n$RefreshReg$(_c, \"MovieComponent\");","map":{"version":3,"names":["React","GenreComponent","jsxDEV","_jsxDEV","MovieComponent","movie","categoriesById","_movie$genre_ids$map","_movie$genre_ids","movieGenres","genre_ids","map","genreId","children","src","poster_path","alt","original_title","fileName","_jsxFileName","lineNumber","columnNumber","overview","vote_average","vote_count","length","genre","id","_c","$RefreshReg$"],"sources":["/Users/legallkevin/React/webflix_project/webflix/src/components/MovieComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { Movie } from \"../models/Movie\";\nimport { Genre } from \"../models/Genre\";\nimport GenreComponent from \"./GenreComponent\";\n\ninterface Props {\n    movie: Movie;\n    categoriesById: { [key: number]: Genre };\n}\n\nconst MovieComponent: React.FC<Props> = ({ movie, categoriesById }: Props) => {\n    const movieGenres = movie.genre_ids?.map((genreId) => categoriesById[genreId]) ?? [];\n\n    return (\n        <li>\n            <img src={\"https://image.tmdb.org/t/p/w300/\" + movie.poster_path} alt={\"image du film \" + movie.original_title} />\n            <h3>{movie.original_title}</h3>\n            <p>{movie.overview}</p>\n            <p>{movie.vote_average}/10 ({movie.vote_count} votes)</p>\n            <ul>Catégories :\n                {\n                    movieGenres.length > 0 ? (\n                        movieGenres.map((genre) => (\n                            <GenreComponent key={genre.id} genre={genre} />\n                        ))\n                    ) : (\n                        \"Ce film ne possède pas de catégorie.\"\n                    )\n                }\n            </ul>\n        </li>\n    );\n};\n\nexport default MovieComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9C,MAAMC,cAA+B,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAsB,CAAC,KAAK;EAAA,IAAAC,oBAAA,EAAAC,gBAAA;EAC1E,MAAMC,WAAW,IAAAF,oBAAA,IAAAC,gBAAA,GAAGH,KAAK,CAACK,SAAS,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBG,GAAG,CAAEC,OAAO,IAAKN,cAAc,CAACM,OAAO,CAAC,CAAC,cAAAL,oBAAA,cAAAA,oBAAA,GAAI,EAAE;EAEpF,oBACIJ,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAKW,GAAG,EAAE,kCAAkC,GAAGT,KAAK,CAACU,WAAY;MAACC,GAAG,EAAE,gBAAgB,GAAGX,KAAK,CAACY;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClHlB,OAAA;MAAAU,QAAA,EAAKR,KAAK,CAACY;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/BlB,OAAA;MAAAU,QAAA,EAAIR,KAAK,CAACiB;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA;MAAAU,QAAA,GAAIR,KAAK,CAACkB,YAAY,EAAC,OAAK,EAAClB,KAAK,CAACmB,UAAU,EAAC,SAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzDlB,OAAA;MAAAU,QAAA,GAAI,iBACA,EACIJ,WAAW,CAACgB,MAAM,GAAG,CAAC,GAClBhB,WAAW,CAACE,GAAG,CAAEe,KAAK,iBAClBvB,OAAA,CAACF,cAAc;QAAgByB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACjD,CAAC,GAEF,sCACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAACO,EAAA,GAtBIxB,cAA+B;AAwBrC,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}