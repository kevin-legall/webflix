{"ast":null,"code":"var _jsxFileName = \"/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchMovies = () => {\n  _s();\n  const [movies, setData] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  // useEffect(() => {\n  //     const fetchMovies = async () => {\n  //         try {\n  //             const resData = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n  //             setData(resData.data.results);\n  //         } catch (err) {\n  //             console.error('Erreur lors de la récupération des films :', err);\n  //         }\n  //     };\n  //\n  //     const fetchGenres = async () => {\n  //         try {\n  //             const resGenres = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n  //             setGenres(resGenres.data.genres);\n  //         } catch (err) {\n  //             console.error('Erreur lors de la récupération des catégories :', err);\n  //         }\n  //     };\n  //\n  //     const options = {\n  //         method: 'GET',\n  //         headers: {\n  //             accept: 'application/json',\n  //             Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n  //         }\n  //     };\n  //\n  //     fetchMovies().then(fetchGenres);\n  //\n  //     genres.forEach((genre:Genre)=> {\n  //         console.log(\"coucou\")\n  //         data.filter((movie:Movie) => {\n  //             if (movie.genres_ids.includes(genre.id)) {\n  //                 movie.genres.push(genre);\n  //                 console.log(movie.genres)\n  //             } else {\n  //                 console.log('rien de bon');\n  //             }\n  //         });\n  //     })\n  //\n  // }, [data, genres]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [moviesResponse, genresResponse] = await Promise.all([axios.get('https://api.themoviedb.org/3/movie/popular', options), axios.get('https://api.themoviedb.org/3/genre/movie/list', options)]);\n        setMovies(moviesResponse.data.results);\n        setGenres(genresResponse.data.genres);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données :', error);\n      }\n    };\n    const options = {\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer YOUR_API_KEY'\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(movie => /*#__PURE__*/_jsxDEV(MovieComponent, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(FetchMovies, \"2qukkd64+NsQ6PIcoWdjmmEV7Ag=\");\n_c = FetchMovies;\nexport default FetchMovies;\nvar _c;\n$RefreshReg$(_c, \"FetchMovies\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieComponent","jsxDEV","_jsxDEV","FetchMovies","_s","movies","setData","genres","setGenres","fetchData","moviesResponse","genresResponse","Promise","all","get","options","setMovies","data","results","error","console","headers","accept","Authorization","children","map","movie","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { Movie } from \"../models/Movie\";\nimport { Genre } from \"../models/Genre\";\n\nconst FetchMovies = () => {\n\n    const [movies, setData] = useState<Movie[]>([]);\n    const [genres, setGenres] = useState<Genre[]>([]);\n\n    // useEffect(() => {\n    //     const fetchMovies = async () => {\n    //         try {\n    //             const resData = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n    //             setData(resData.data.results);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des films :', err);\n    //         }\n    //     };\n    //\n    //     const fetchGenres = async () => {\n    //         try {\n    //             const resGenres = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n    //             setGenres(resGenres.data.genres);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des catégories :', err);\n    //         }\n    //     };\n    //\n    //     const options = {\n    //         method: 'GET',\n    //         headers: {\n    //             accept: 'application/json',\n    //             Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n    //         }\n    //     };\n    //\n    //     fetchMovies().then(fetchGenres);\n    //\n    //     genres.forEach((genre:Genre)=> {\n    //         console.log(\"coucou\")\n    //         data.filter((movie:Movie) => {\n    //             if (movie.genres_ids.includes(genre.id)) {\n    //                 movie.genres.push(genre);\n    //                 console.log(movie.genres)\n    //             } else {\n    //                 console.log('rien de bon');\n    //             }\n    //         });\n    //     })\n    //\n    // }, [data, genres]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const [moviesResponse, genresResponse] = await Promise.all([\n                    axios.get('https://api.themoviedb.org/3/movie/popular', options),\n                    axios.get('https://api.themoviedb.org/3/genre/movie/list', options),\n                ]);\n\n                setMovies(moviesResponse.data.results);\n                setGenres(genresResponse.data.genres);\n            } catch (error) {\n                console.error('Erreur lors de la récupération des données :', error);\n            }\n        };\n\n        const options = {\n            headers: {\n                accept: 'application/json',\n                Authorization: 'Bearer YOUR_API_KEY',\n            },\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <ul>\n                {\n                    data.map((movie: Movie) => (\n                        <MovieComponent key={movie.id} movie={movie} />\n                    ))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default FetchMovies;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAU,EAAE,CAAC;EAC/C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,EAAE,CAAC;;EAEjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAM,CAACC,cAAc,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvDd,KAAK,CAACe,GAAG,CAAC,4CAA4C,EAAEC,OAAO,CAAC,EAChEhB,KAAK,CAACe,GAAG,CAAC,+CAA+C,EAAEC,OAAO,CAAC,CACtE,CAAC;QAEFC,SAAS,CAACN,cAAc,CAACO,IAAI,CAACC,OAAO,CAAC;QACtCV,SAAS,CAACG,cAAc,CAACM,IAAI,CAACV,MAAM,CAAC;MACzC,CAAC,CAAC,OAAOY,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACxE;IACJ,CAAC;IAED,MAAMJ,OAAO,GAAG;MACZM,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACnB;IACJ,CAAC;IAEDd,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAAsB,QAAA,EAEQP,IAAI,CAACQ,GAAG,CAAEC,KAAY,iBAClBxB,OAAA,CAACF,cAAc;QAAgB0B,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC3B,EAAA,CApFID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAsFjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}