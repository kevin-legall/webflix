[{"/Users/legallkevin/React/webflix_project/webflix/src/index.tsx":"1","/Users/legallkevin/React/webflix_project/webflix/src/App.tsx":"2","/Users/legallkevin/React/webflix_project/webflix/src/layouts/Home.tsx":"3","/Users/legallkevin/React/webflix_project/webflix/src/layouts/Movies.tsx":"4","/Users/legallkevin/React/webflix_project/webflix/src/layouts/Favorites.tsx":"5","/Users/legallkevin/React/webflix_project/webflix/src/layouts/NotFound.tsx":"6","/Users/legallkevin/React/webflix_project/webflix/src/layouts/List.tsx":"7","/Users/legallkevin/React/webflix_project/webflix/src/layouts/Series.tsx":"8","/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx":"9","/Users/legallkevin/React/webflix_project/webflix/src/components/Navbar.tsx":"10","/Users/legallkevin/React/webflix_project/webflix/src/components/MovieComponent.tsx":"11","/Users/legallkevin/React/webflix_project/webflix/src/components/GenreComponent.tsx":"12"},{"size":287,"mtime":1690820502602,"results":"13","hashOfConfig":"14"},{"size":913,"mtime":1690828957481,"results":"15","hashOfConfig":"14"},{"size":367,"mtime":1690915080977,"results":"16","hashOfConfig":"14"},{"size":219,"mtime":1690820502603,"results":"17","hashOfConfig":"14"},{"size":239,"mtime":1690820502603,"results":"18","hashOfConfig":"14"},{"size":159,"mtime":1690820502604,"results":"19","hashOfConfig":"14"},{"size":218,"mtime":1690820502603,"results":"20","hashOfConfig":"14"},{"size":221,"mtime":1690820502604,"results":"21","hashOfConfig":"14"},{"size":2132,"mtime":1690909300554,"results":"22","hashOfConfig":"14"},{"size":3329,"mtime":1690920192584,"results":"23","hashOfConfig":"14"},{"size":1179,"mtime":1690913702818,"results":"24","hashOfConfig":"14"},{"size":265,"mtime":1690913635222,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"j8pxcm",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/legallkevin/React/webflix_project/webflix/src/index.tsx",[],[],[],"/Users/legallkevin/React/webflix_project/webflix/src/App.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/layouts/Home.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/layouts/Movies.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/layouts/Favorites.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/layouts/NotFound.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/layouts/List.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/layouts/Series.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx",["64","65"],[],"import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { Movie } from \"../models/Movie\";\nimport { Genre } from \"../models/Genre\";\nimport GenreComponent from \"./GenreComponent\";\n\nconst FetchMovies: React.FC = () => {\n\n    const [movies, setMovies] = useState<Movie[]>([]);\n    const [genres, setGenres] = useState<Genre[]>([]);\n    const [categoriesById, setCategoriesById] = useState<{ [key: number]: Genre }>({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const [moviesResponse, genresResponse] = await Promise.all([\n                    axios.get('https://api.themoviedb.org/3/movie/popular', options),\n                    axios.get('https://api.themoviedb.org/3/genre/movie/list', options),\n                ]);\n\n                const genresData = genresResponse.data.genres.reduce((acc: { [key: number]: Genre }, genre: Genre) => {\n                    acc[genre.id] = genre;\n                    return acc;\n                }, {});\n\n                setMovies(moviesResponse.data.results);\n                setGenres(genresResponse.data.genres);\n                setCategoriesById(genresData);\n            } catch (error) {\n                console.error('Erreur lors de la récupération des données :', error);\n            }\n        };\n\n        const options = {\n            method: 'GET',\n            headers: {\n                accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <ul>\n                {\n                    movies.map((movie: Movie) => (\n                        <MovieComponent key={movie.id} movie={movie} categoriesById={categoriesById} />\n                    ))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default FetchMovies;\n","/Users/legallkevin/React/webflix_project/webflix/src/components/Navbar.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/components/MovieComponent.tsx",[],[],"/Users/legallkevin/React/webflix_project/webflix/src/components/GenreComponent.tsx",[],[],{"ruleId":"66","severity":1,"message":"67","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":11,"column":12,"nodeType":"68","messageId":"69","endLine":11,"endColumn":18},"@typescript-eslint/no-unused-vars","'GenreComponent' is defined but never used.","Identifier","unusedVar","'genres' is assigned a value but never used."]