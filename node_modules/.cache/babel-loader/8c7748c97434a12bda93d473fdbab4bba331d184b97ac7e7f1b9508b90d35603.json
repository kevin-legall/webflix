{"ast":null,"code":"var _jsxFileName = \"/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchMovies = () => {\n  _s();\n  // Data for Users\n  const [movies, setMovies] = useState([]);\n\n  // Data for Posts\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    Promise.all([axios.get('https://api.themoviedb.org/3/movie/popular', options), axios.get('https://api.themoviedb.org/3/genre/movie/list', options)]).then(([resMovies, resGenres]) => Promise.all([resMovies.json(), resGenres.json()])).then(([dataMovies, dataGenres]) => {\n      setMovies(resMovies.movies.result);\n      setGenres(dataGenres);\n    });\n\n    // const [movies, setMovies] = useState<Movie[]>([]);\n    // const [genres, setGenres] = useState<Genre[]>([]);\n    //\n    // useEffect(() => {\n    //     const fetchMovies = async () => {\n    //         try {\n    //             const resMovies = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n    //             setMovies(resMovies.movies.results);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des films :', err);\n    //         }\n    //     };\n    //\n    //     const fetchGenres = async () => {\n    //         try {\n    //             const resGenres = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n    //             setGenres(resGenres.data.genres);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des catégories :', err);\n    //         }\n    //     };\n    //\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n      }\n    };\n    //\n    //     fetchMovies().then(fetchGenres);\n\n    genres.forEach(genre => {\n      console.log(\"coucou\");\n      movies.filter(movie => {\n        if (movie.genres_ids.includes(genre.id)) {\n          movie.genres.push(genre);\n          console.log(movie.genres);\n        } else {\n          console.log('rien de bon');\n        }\n      });\n    });\n  }, [movies, genres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieComponent, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(FetchMovies, \"dsDHCPxvk/Mc3tYROhKco2vZgWk=\");\n_c = FetchMovies;\nexport default FetchMovies;\nvar _c;\n$RefreshReg$(_c, \"FetchMovies\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieComponent","jsxDEV","_jsxDEV","FetchMovies","_s","movies","setMovies","genres","setGenres","Promise","all","get","options","then","resMovies","resGenres","json","dataMovies","dataGenres","result","method","headers","accept","Authorization","forEach","genre","console","log","filter","movie","genres_ids","includes","id","push","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { Movie } from \"../models/Movie\";\nimport { Genre } from \"../models/Genre\";\n\nconst FetchMovies = () => {\n\n    // Data for Users\n    const [movies, setMovies] = useState<Movie[]>([]);\n\n    // Data for Posts\n    const [genres, setGenres] = useState<Genre[]>([]);\n\n    useEffect(() => {\n        Promise.all([\n            axios.get('https://api.themoviedb.org/3/movie/popular', options),\n            axios.get('https://api.themoviedb.org/3/genre/movie/list', options),\n        ])\n            .then(([resMovies, resGenres]) =>\n                Promise.all([resMovies.json(), resGenres.json()])\n            )\n            .then(([dataMovies, dataGenres]) => {\n                setMovies(resMovies.movies.result);\n                setGenres(dataGenres);\n            });\n\n    // const [movies, setMovies] = useState<Movie[]>([]);\n    // const [genres, setGenres] = useState<Genre[]>([]);\n    //\n    // useEffect(() => {\n    //     const fetchMovies = async () => {\n    //         try {\n    //             const resMovies = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n    //             setMovies(resMovies.movies.results);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des films :', err);\n    //         }\n    //     };\n    //\n    //     const fetchGenres = async () => {\n    //         try {\n    //             const resGenres = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n    //             setGenres(resGenres.data.genres);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des catégories :', err);\n    //         }\n    //     };\n    //\n        const options = {\n            method: 'GET',\n            headers: {\n                accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n            }\n        };\n    //\n    //     fetchMovies().then(fetchGenres);\n\n        genres.forEach((genre:Genre)=> {\n            console.log(\"coucou\")\n            movies.filter((movie:Movie) => {\n                if (movie.genres_ids.includes(genre.id)) {\n                    movie.genres.push(genre);\n                    console.log(movie.genres)\n                } else {\n                    console.log('rien de bon');\n                }\n            });\n        })\n\n    }, [movies, genres]);\n\n    return (\n        <div>\n            <ul>\n                {\n                    movies.map((movie: Movie) => (\n                        <MovieComponent key={movie.id} movie={movie} />\n                    ))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default FetchMovies;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAU,EAAE,CAAC;;EAEjD;EACA,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZY,OAAO,CAACC,GAAG,CAAC,CACRX,KAAK,CAACY,GAAG,CAAC,4CAA4C,EAAEC,OAAO,CAAC,EAChEb,KAAK,CAACY,GAAG,CAAC,+CAA+C,EAAEC,OAAO,CAAC,CACtE,CAAC,CACGC,IAAI,CAAC,CAAC,CAACC,SAAS,EAAEC,SAAS,CAAC,KACzBN,OAAO,CAACC,GAAG,CAAC,CAACI,SAAS,CAACE,IAAI,CAAC,CAAC,EAAED,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CACpD,CAAC,CACAH,IAAI,CAAC,CAAC,CAACI,UAAU,EAAEC,UAAU,CAAC,KAAK;MAChCZ,SAAS,CAACQ,SAAS,CAACT,MAAM,CAACc,MAAM,CAAC;MAClCX,SAAS,CAACU,UAAU,CAAC;IACzB,CAAC,CAAC;;IAEV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACI,MAAMN,OAAO,GAAG;MACZQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACnB;IACJ,CAAC;IACL;IACA;;IAEIhB,MAAM,CAACiB,OAAO,CAAEC,KAAW,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBtB,MAAM,CAACuB,MAAM,CAAEC,KAAW,IAAK;QAC3B,IAAIA,KAAK,CAACC,UAAU,CAACC,QAAQ,CAACN,KAAK,CAACO,EAAE,CAAC,EAAE;UACrCH,KAAK,CAACtB,MAAM,CAAC0B,IAAI,CAACR,KAAK,CAAC;UACxBC,OAAO,CAACC,GAAG,CAACE,KAAK,CAACtB,MAAM,CAAC;QAC7B,CAAC,MAAM;UACHmB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC9B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EAEN,CAAC,EAAE,CAACtB,MAAM,EAAEE,MAAM,CAAC,CAAC;EAEpB,oBACIL,OAAA;IAAAgC,QAAA,eACIhC,OAAA;MAAAgC,QAAA,EAEQ7B,MAAM,CAAC8B,GAAG,CAAEN,KAAY,iBACpB3B,OAAA,CAACF,cAAc;QAAgB6B,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACG,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnC,EAAA,CA9EID,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAgFjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}