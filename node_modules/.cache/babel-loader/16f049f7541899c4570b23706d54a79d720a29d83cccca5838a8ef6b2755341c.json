{"ast":null,"code":"var _jsxFileName = \"/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MovieComponent from \"./MovieComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchMovies = () => {\n  _s();\n  // Data for Users\n  const [movies, setMovies] = useState([]);\n\n  // Data for Posts\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    Promise.all([fetch('https://api.themoviedb.org/3/movie/popular'), fetch('https://api.themoviedb.org/3/genre/movie/list')]).then(([resMovies, resGenres]) => Promise.all([resMovies.json(), resGenres.json()])).then(([dataMovies, dataGenres]) => {\n      setMovies(dataMovies);\n      setGenres(dataGenres);\n    });\n\n    // const [movies, setMovies] = useState<Movie[]>([]);\n    // const [genres, setGenres] = useState<Genre[]>([]);\n    //\n    // useEffect(() => {\n    //     const fetchMovies = async () => {\n    //         try {\n    //             const resMovies = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n    //             setMovies(resMovies.movies.results);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des films :', err);\n    //         }\n    //     };\n    //\n    //     const fetchGenres = async () => {\n    //         try {\n    //             const resGenres = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n    //             setGenres(resGenres.data.genres);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des catégories :', err);\n    //         }\n    //     };\n    //\n    //     const options = {\n    //         method: 'GET',\n    //         headers: {\n    //             accept: 'application/json',\n    //             Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n    //         }\n    //     };\n    //\n    //     fetchMovies().then(fetchGenres);\n\n    genres.forEach(genre => {\n      console.log(\"coucou\");\n      data.filter(movie => {\n        if (movie.genres_ids.includes(genre.id)) {\n          movie.genres.push(genre);\n          console.log(movie.genres);\n        } else {\n          console.log('rien de bon');\n        }\n      });\n    });\n  }, [movies, genres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(movie => /*#__PURE__*/_jsxDEV(MovieComponent, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(FetchMovies, \"dsDHCPxvk/Mc3tYROhKco2vZgWk=\");\n_c = FetchMovies;\nexport default FetchMovies;\nvar _c;\n$RefreshReg$(_c, \"FetchMovies\");","map":{"version":3,"names":["React","useEffect","useState","MovieComponent","jsxDEV","_jsxDEV","FetchMovies","_s","movies","setMovies","genres","setGenres","Promise","all","fetch","then","resMovies","resGenres","json","dataMovies","dataGenres","forEach","genre","console","log","data","filter","movie","genres_ids","includes","id","push","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/legallkevin/React/webflix_project/webflix/src/components/FetchMovies.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport MovieComponent from \"./MovieComponent\";\nimport { Movie } from \"../models/Movie\";\nimport { Genre } from \"../models/Genre\";\n\nconst FetchMovies = () => {\n\n    // Data for Users\n    const [movies, setMovies] = useState<Movie[]>([]);\n\n    // Data for Posts\n    const [genres, setGenres] = useState<Genre[]>([]);\n\n    useEffect(() => {\n        Promise.all([\n            fetch('https://api.themoviedb.org/3/movie/popular'),\n            fetch('https://api.themoviedb.org/3/genre/movie/list'),\n        ])\n            .then(([resMovies, resGenres]) =>\n                Promise.all([resMovies.json(), resGenres.json()])\n            )\n            .then(([dataMovies, dataGenres]) => {\n                setMovies(dataMovies);\n                setGenres(dataGenres);\n            });\n\n    // const [movies, setMovies] = useState<Movie[]>([]);\n    // const [genres, setGenres] = useState<Genre[]>([]);\n    //\n    // useEffect(() => {\n    //     const fetchMovies = async () => {\n    //         try {\n    //             const resMovies = await axios.get('https://api.themoviedb.org/3/movie/popular', options);\n    //             setMovies(resMovies.movies.results);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des films :', err);\n    //         }\n    //     };\n    //\n    //     const fetchGenres = async () => {\n    //         try {\n    //             const resGenres = await axios.get('https://api.themoviedb.org/3/genre/movie/list', options);\n    //             setGenres(resGenres.data.genres);\n    //         } catch (err) {\n    //             console.error('Erreur lors de la récupération des catégories :', err);\n    //         }\n    //     };\n    //\n    //     const options = {\n    //         method: 'GET',\n    //         headers: {\n    //             accept: 'application/json',\n    //             Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWVjZTA4MDU3ZmVhMjRkNzI1ZGMyMTc1ZWZmOGY4NSIsInN1YiI6IjY0YzM2NmRkNDMyNTBmMDBlODA0NWFlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fz8Zd74v5UOGKpBtBIdhelLPKM6ntHVrGQNS1yBU1kk'\n    //         }\n    //     };\n    //\n    //     fetchMovies().then(fetchGenres);\n\n        genres.forEach((genre:Genre)=> {\n            console.log(\"coucou\")\n            data.filter((movie:Movie) => {\n                if (movie.genres_ids.includes(genre.id)) {\n                    movie.genres.push(genre);\n                    console.log(movie.genres)\n                } else {\n                    console.log('rien de bon');\n                }\n            });\n        })\n\n    }, [movies, genres]);\n\n    return (\n        <div>\n            <ul>\n                {\n                    data.map((movie: Movie) => (\n                        <MovieComponent key={movie.id} movie={movie} />\n                    ))\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default FetchMovies;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAU,EAAE,CAAC;;EAEjD;EACA,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZW,OAAO,CAACC,GAAG,CAAC,CACRC,KAAK,CAAC,4CAA4C,CAAC,EACnDA,KAAK,CAAC,+CAA+C,CAAC,CACzD,CAAC,CACGC,IAAI,CAAC,CAAC,CAACC,SAAS,EAAEC,SAAS,CAAC,KACzBL,OAAO,CAACC,GAAG,CAAC,CAACG,SAAS,CAACE,IAAI,CAAC,CAAC,EAAED,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CACpD,CAAC,CACAH,IAAI,CAAC,CAAC,CAACI,UAAU,EAAEC,UAAU,CAAC,KAAK;MAChCX,SAAS,CAACU,UAAU,CAAC;MACrBR,SAAS,CAACS,UAAU,CAAC;IACzB,CAAC,CAAC;;IAEV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEIV,MAAM,CAACW,OAAO,CAAEC,KAAW,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBC,IAAI,CAACC,MAAM,CAAEC,KAAW,IAAK;QACzB,IAAIA,KAAK,CAACC,UAAU,CAACC,QAAQ,CAACP,KAAK,CAACQ,EAAE,CAAC,EAAE;UACrCH,KAAK,CAACjB,MAAM,CAACqB,IAAI,CAACT,KAAK,CAAC;UACxBC,OAAO,CAACC,GAAG,CAACG,KAAK,CAACjB,MAAM,CAAC;QAC7B,CAAC,MAAM;UACHa,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC9B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EAEN,CAAC,EAAE,CAAChB,MAAM,EAAEE,MAAM,CAAC,CAAC;EAEpB,oBACIL,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAA2B,QAAA,EAEQP,IAAI,CAACQ,GAAG,CAAEN,KAAY,iBAClBtB,OAAA,CAACF,cAAc;QAAgBwB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACG,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA9EID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAgFjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}