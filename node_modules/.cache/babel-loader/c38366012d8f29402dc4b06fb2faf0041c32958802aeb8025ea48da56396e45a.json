{"ast":null,"code":"var _jsxFileName = \"/Users/legallkevin/React/webflix_project/webflix/src/components/MovieComponent.tsx\";\nimport React from 'react';\nimport GenreComponent from \"./GenreComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieComponent = ({\n  movie,\n  categoriesById\n}) => {\n  var _movie$genres_ids$map, _movie$genres_ids;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://image.tmdb.org/t/p/w300/\" + movie.poster_path,\n      alt: \"image du film \" + movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [movie.vote_average, \"/10 (\", movie.vote_count, \" votes)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"Cat\\xE9gories :\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (_movie$genres_ids$map = (_movie$genres_ids = movie.genres_ids) === null || _movie$genres_ids === void 0 ? void 0 : _movie$genres_ids.map(genreId => {\n          const genre = categoriesById[genreId];\n          if (genre) {\n            return /*#__PURE__*/_jsxDEV(GenreComponent, {\n              genre: genre\n            }, genre.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 36\n            }, this);\n          }\n          return null;\n        })) !== null && _movie$genres_ids$map !== void 0 ? _movie$genres_ids$map : \"Ce film ne possède pas de catégorie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = MovieComponent;\nexport default MovieComponent;\nvar _c;\n$RefreshReg$(_c, \"MovieComponent\");","map":{"version":3,"names":["React","GenreComponent","jsxDEV","_jsxDEV","MovieComponent","movie","categoriesById","_movie$genres_ids$map","_movie$genres_ids","children","src","poster_path","alt","original_title","fileName","_jsxFileName","lineNumber","columnNumber","overview","vote_average","vote_count","genres_ids","map","genreId","genre","id","_c","$RefreshReg$"],"sources":["/Users/legallkevin/React/webflix_project/webflix/src/components/MovieComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { Movie } from \"../models/Movie\";\nimport { Genre } from \"../models/Genre\";\nimport GenreComponent from \"./GenreComponent\";\n\ninterface Props {\n    movie: Movie;\n    categoriesById: { [key: number]: Genre };\n}\n\nconst MovieComponent: React.FC<Props> = ({ movie, categoriesById }: Props) => {\n    return (\n        <li>\n            <img src={\"https://image.tmdb.org/t/p/w300/\" + movie.poster_path} alt={\"image du film \" + movie.original_title} />\n            <h3>{movie.original_title}</h3>\n            <p>{movie.overview}</p>\n            <p>{movie.vote_average}/10 ({movie.vote_count} votes)</p>\n            <ul>Catégories :\n                <div>\n                    {movie.genres_ids?.map((genreId) => {\n                        const genre = categoriesById[genreId];\n                        if (genre) {\n                            return <GenreComponent key={genre.id} genre={genre} />;\n                        }\n                        return null;\n                    }) ?? \"Ce film ne possède pas de catégorie.\"}\n                </div>\n            </ul>\n        </li>\n    );\n};\n\nexport default MovieComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9C,MAAMC,cAA+B,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAsB,CAAC,KAAK;EAAA,IAAAC,qBAAA,EAAAC,iBAAA;EAC1E,oBACIL,OAAA;IAAAM,QAAA,gBACIN,OAAA;MAAKO,GAAG,EAAE,kCAAkC,GAAGL,KAAK,CAACM,WAAY;MAACC,GAAG,EAAE,gBAAgB,GAAGP,KAAK,CAACQ;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClHd,OAAA;MAAAM,QAAA,EAAKJ,KAAK,CAACQ;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/Bd,OAAA;MAAAM,QAAA,EAAIJ,KAAK,CAACa;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAAM,QAAA,GAAIJ,KAAK,CAACc,YAAY,EAAC,OAAK,EAACd,KAAK,CAACe,UAAU,EAAC,SAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzDd,OAAA;MAAAM,QAAA,GAAI,iBACA,eAAAN,OAAA;QAAAM,QAAA,GAAAF,qBAAA,IAAAC,iBAAA,GACKH,KAAK,CAACgB,UAAU,cAAAb,iBAAA,uBAAhBA,iBAAA,CAAkBc,GAAG,CAAEC,OAAO,IAAK;UAChC,MAAMC,KAAK,GAAGlB,cAAc,CAACiB,OAAO,CAAC;UACrC,IAAIC,KAAK,EAAE;YACP,oBAAOrB,OAAA,CAACF,cAAc;cAAgBuB,KAAK,EAAEA;YAAM,GAAvBA,KAAK,CAACC,EAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB,CAAC;UAC1D;UACA,OAAO,IAAI;QACf,CAAC,CAAC,cAAAV,qBAAA,cAAAA,qBAAA,GAAI;MAAsC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAACS,EAAA,GApBItB,cAA+B;AAsBrC,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}